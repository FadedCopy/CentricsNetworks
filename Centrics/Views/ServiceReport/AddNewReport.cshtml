@model Centrics.Models.ServiceReport

@{
    ViewData["Title"] = "Add New Report";
}
<style>
    div.form-group {
        margin-bottom: 10px;
        margin: auto;
        border-bottom: 10px;
    }
</style>

@*<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link href="~/Content/jquery-ui-timepicker-addon.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui-timepicker-addon.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $(function () {
            $(".date-picker").datetimepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: "-100:+0",
                dateFormat: 'dd-M-yy',
                controlType: 'select',
                timeFormat: 'hh:mm TT'
            });

        });

        jQuery.validator.methods.date = function (value, element) {
            var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
            if (isChrome) {
                var d = new Date();
                return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
            } else {
                return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
            }
        };

    });

</script>*@

<!-- Textbox-->
<script src="//cdn.ckeditor.com/4.9.0/basic/ckeditor.js"></script>

<h2 style="text-align:center;">Service Report</h2>

@using (Html.BeginForm("AddNewReport", "ServiceReport", FormMethod.Post,new { id = "serviceform"}))
{

    @Html.ValidationSummary("", new { @class = "text-danger" })

    @*Questionably needed to display this here maybe? for reference*@
    <div class="form-group">
        @Html.LabelFor(m => m.SerialNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.SerialNumber, new { @class = "form-control", @readonly = "readonly" })
        </div>
    </div>

    <h3>&nbsp; Client Details</h3>

    <div class="form-group">
        @Html.LabelFor(m => m.ClientCompanyName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.ClientCompanyName, (List<SelectListItem>)ViewData["Companies"], "Select Company", new { @class = "form-control" })
        </div>
    </div>

    <div id="loadoutautobots" ></div>

    @*<div class="form-group">
        @Html.LabelFor(m => m.PostalCode, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.PostalCode, new { @class = "form-control", @id = "postal", @onchange = "fun();" })
            <br />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ClientAddress, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ClientAddress, new { @class = "form-control", @id = "address" })
            <br />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ClientAddress2, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ClientAddress2, new { @class = "form-control" })
            <br />
        </div>
    </div>*@

    @*<div class="form-group">
        @Html.LabelFor(m => m.ClientTel, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ClientTel, new { @class = "form-control", @MaxLength = 8 })
            <br />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ClientContactPerson, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.ClientContactPerson, new { @class = "form-control" })
            <br />
        </div>
    </div>*@

    <h3> &nbsp; Visit Details</h3>
    <div class="form-group">

        @Html.LabelFor(m => m.PurposeOfVisit, new { @class = "col-md-2 control-label chzn-select" })
        <div class="col-md-10">
            @Html.ListBoxFor(m => m.PurposeOfVisit,
                                                                  new MultiSelectList((List<SelectListItem>)ViewData["Purpose"], "Value", "Text"),
                                                                 new { style = "display:block;", @class = "form-control" })
            <br />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", style = "width=200px;height=50px;" })
            <br />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Remarks, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control" })
            <br />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.TimeStart, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.TimeStart, new { @class = "date-picker" })
            <br />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.TimeEnd, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.TimeEnd, new { @class = "date-picker" })
            <br />
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(m => m.MSHUsed, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.MSHUsed, new { @class = "form-control" })
            <br />
        </div>
    </div>*@

    <p> Acknowledgement?</p>
    <div class="form-group">
        @Html.LabelFor(m => m.AttendedByStaffName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.AttendedByStaffName, new { @class = "form-control" })
            <br />
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(m => m.AttendedOnDate, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.AttendedOnDate, new { @class = "form-control" })
            <br />
        </div>
    </div>*@

    <p> Billing</p>
    @*
        <div class="form-group">
            @Html.LabelFor(m => m.Labour, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Labour, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Transport, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Transport, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Parts, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Parts, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Others, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Others, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.InvoiceNo, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.InvoiceNo, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.InvoiceDate, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.InvoiceDate, new { @class = "form-control" })
            </div>
        </div>
    *@

    <div class="form-group">
        @Html.LabelFor(m => m.JobStatus, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.ListBoxFor(m => m.JobStatus,
                                                             new MultiSelectList((List<SelectListItem>)ViewData["JobStatusList"], "Value", "Text"),
                                                                  new { @class = "form-control" })
        </div>
    </div>

    @*wait for controller wtf
        <div class="form-group">
            @Html.LabelFor(m => m.ServiceRating, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.ListBoxFor(m => m.ServiceRating,
               MultiSelectList(List<SelectListItem>)
               new { @class = "form-control" })
            </div>
        </div>
    *@
    <input type="submit" value="Confirm" />
    <input type="reset" value="Cancel" />
    @*
        <p> top bottom of form confirm</p>
        <p> reset button need confirm?</p>
        <p> word count?</p>
        <p>missing service rating due to client side? not needed on this form</p>
        <p>confirm some listboxfor? design?</p>
        <p>date time not done and need confirmation</p>
        <p>model requires cleaning</p>
        <p>Acknowledgement is missing details</p>
        <p>convert pdf?</p>
        <p>restyle this</p>
    *@
}
<!-- replacing text area-->
<script>
    CKEDITOR.replace("Description");
    CKEDITOR.replace("Remarks");
</script>

<script>
    function fun() {

        var meh = document.getElementById("postal").value;
        $.ajax({
            url: '@Url.Action("ReturnPostalAsync","ServiceReport")',
            method: "post",
            data: { postal: meh },
            success: function (data) {
                var x = document.getElementById("address");
                x.value = data;}
        }).done(function (data) {
            var x = document.getElementById("address");
            x.value = data;
        });
        //}).done(function (data) {
        //    var x = document.getElementById("address")
        //    x.value = data
        //}).fail(function () {
        //    //error
        //});
    }

</script>